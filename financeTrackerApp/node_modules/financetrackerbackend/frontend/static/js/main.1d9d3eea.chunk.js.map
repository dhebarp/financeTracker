{"version":3,"sources":["components/Navbar.js","components/subcomponents/MortgageData.js","components/subcomponents/MortgageChart.js","components/MortgageManager.js","components/Dashboard.js","components/Footer.js","components/Home.js","components/Auth.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","Fragment","className","to","calculatePayments","principalAmount","rate","years","principal","parseFloat","CalculateInterest","calculatedPayments","x","Math","pow","monthly","monthlyPayment","toFixed","totalInterest","totalPayment","Chart","props","data","this","chartData","width","height","options","responsive","maintainAspectRatio","React","Component","MortgageManager","useState","setPrincipal","setRate","setYears","initialMonthlyPayment","initialTotalInterest","initialTotalPayment","setMonthlyPayment","setTotalInterest","setTotalPayment","labels","datasets","parseInt","backgroundColor","setChartData","onSubmit","event","preventDefault","name","type","value","placeholder","onChange","e","target","newDataset","Dashboard","Footer","Home","src","alt","class","Auth","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1d9d3eea.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport function Navbar () {\n  \n    return(\n      <React.Fragment>\n        <nav className={\"navbar navbar-expand-lg navbar-light bg-light\"}>\n        <ul className=\"navbar-nav\">\n        <li className= {\"navbar-brand\"}>Alfred</li>\n          <li className=\"nav-item active\">\n          <Link className={\"nav-link\"} to='/'>Home </Link>\n          </li>\n          <li className=\"nav-item active\">\n          <Link className={\"nav-link\"} to='/dashboard'>Dashboard</Link>\n          </li>\n          <li className=\"nav-item active\">\n          {/* <Link className={\"nav-link\"} to=''></Link> */}\n          </li>\n        </ul>\n    </nav>\n    </React.Fragment>\n    )   \n}","\nexport function calculatePayments(principalAmount, rate, years ) {\n\n    const principal = parseFloat(principalAmount);\n  const CalculateInterest = parseFloat(rate) / 100 / 12;\n  const calculatedPayments = parseFloat(years) * 12;\n\n  //Compute monthly Payment\n\n  const x = Math.pow(1 + CalculateInterest, calculatedPayments);\n  const monthly = (principal * x * CalculateInterest) / (x - 1);\n  const monthlyPayment = monthly.toFixed(2);\n\n  //Compute Interest\n\n  const totalInterest = (monthly * calculatedPayments - principal).toFixed(2);\n\n  //Compute Total Payment\n\n  const totalPayment = (monthly * calculatedPayments).toFixed(2);\n\n  return({monthlyPayment, totalInterest, totalPayment});\n  };","import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\n\nclass Chart extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n        return (\n            <div className={'container'}>\n                <Doughnut\n                    data={this.props.chartData}\n                    width={100}\n                    height={200}\n                    options={{ responsive: true, maintainAspectRatio: false }}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Chart;","import React, { useState } from 'react';\nimport { calculatePayments } from '../components/subcomponents/MortgageData';\nimport Chart from './subcomponents/MortgageChart';\n\nexport function MortgageManager(props) {\n\n  const [principal, setPrincipal] = useState(200000);\n  const [rate, setRate] = useState(5);\n  const [years, setYears] = useState(25);\n  const { monthlyPayment: initialMonthlyPayment, totalInterest: initialTotalInterest, totalPayment: initialTotalPayment } = calculatePayments(principal, rate, years);\n  // console.log(typeof initialTotalInterest, initialTotalInterest, initialMonthlyPayment);\n  const [monthlyPayment, setMonthlyPayment] = useState(initialMonthlyPayment);\n  const [totalInterest, setTotalInterest] = useState(initialTotalInterest);\n  const [totalPayment, setTotalPayment] = useState(initialTotalPayment);\n  // console.log(monthlyPayment, totalPayment, totalPayment)\n\n  const [chartData, setChartData] = useState({\n    labels: ['Monthly Payments', 'interest', 'Balance'],\n    datasets: [{\n      data: [\n        parseInt(monthlyPayment),\n        parseInt(totalInterest),\n        parseInt(totalPayment)\n      ],\n      backgroundColor: ['rgba(204, 102, 255,0.7)', 'rgba(71, 209, 71,1)', 'rgba(0, 153, 255,0.6)', 'rgba(255, 0, 102,0.6)']\n    }]\n  })\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // console.log('you clicked submit');\n  };\n\n  return (\n    <div className={'container'}>\n      <div className=\"row\">\n        <div className=\"col\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-inline\">\n              <label>Borrow Amount</label>\n              <input name=\"principal\" type=\"borrowAmount\" value={principal} className=\"form-group mx-sm-3 mb-2\" placeholder=\"700,000\" onChange={e => {\n                setPrincipal(e.target.value);\n                const { monthlyPayment, totalInterest, totalPayment } = calculatePayments(e.target.value, rate, years);\n                // console.log(monthlyPayment, totalInterest, totalPayment);\n                setMonthlyPayment(parseInt(monthlyPayment, 10));\n                setTotalInterest(parseInt(totalInterest, 10));\n                setTotalPayment(parseInt(totalPayment, 10));\n                const newDataset = { ...chartData };\n                newDataset.datasets[0].data = [monthlyPayment, totalInterest, totalPayment];\n                // console.log('newDataset:', newDataset);\n                setChartData(newDataset);\n              }} />\n            </div>\n            <div className=\"form-inline\">\n              <label >Over</label>\n              <input name=\"years\" type=\"years\" value={years} className=\"form-group mx-sm-3 mb-2\" placeholder=\"30 Years\" onChange={e => {\n                setYears(e.target.value);\n                const { monthlyPayment, totalInterest, totalPayment } = calculatePayments(principal, rate, e.target.value);\n                setMonthlyPayment(monthlyPayment);\n                setTotalInterest(totalInterest);\n                setTotalPayment(totalPayment);\n              }} />\n            </div>\n            <div className=\"form-inline\">\n              <label >Interest Rate</label>\n              <input name=\"interest\" type=\"interest\" value={rate} className=\"form-group mx-sm-3 mb-2\" placeholder=\"3.5%\" onChange={e => {\n                setRate(e.target.value);\n                const { monthlyPayment, totalInterest, totalPayment } = calculatePayments(principal, e.target.value, years);\n                setMonthlyPayment(monthlyPayment);\n                setTotalInterest(totalInterest);\n                setTotalPayment(totalPayment);\n              }} />\n            </div>\n          </form>\n        </div>\n        <div className=\"col\">\n          <Chart chartData={chartData} />\n        </div>\n      </div>\n    </div> \n  )\n};","import React from 'react';\nimport { MortgageManager } from './MortgageManager';\n\nexport function Dashboard() {\n    return (\n        <div className={\"container\"}>\n            <div className=\"row\">\n                <div className=\"col\">\n                    Cashflow Manager here\n                </div>\n                <div className=\"col\">\n                    Asset Manager Here\n                </div>\n                <div className=\"col\">\n                    <MortgageManager />\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nexport function Footer()\n{\n  return (\n    <footer className=\"page-footer font-small teal pt-4\">\n      <div className={\"container-fluid text-center text-md-left\"}>\n        <div className=\"row\">\n          <div className={\"col-md-6 mt-md-0 mt-3\"}>\n            <h5 className={\"text-uppercase font-weight-bold\"}>Footer text 1</h5>\n            <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Expedita sapiente sint, nulla, nihil\n              repudiandae commodi voluptatibus corrupti animi sequi aliquid magnam debitis, maxime quam recusandae\n              harum esse fugiat. Itaque, culpa?</p>\n          </div>\n          <hr className={\"clearfix w-100 d-md-none pb-3\"}/>\n          <div className={\"col-md-6 mb-md-0 mb-3\"}>\n            <h5 className={\"text-uppercase font-weight-bold\"}>Footer text 2</h5>\n            <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Optio deserunt fuga perferendis modi earum\n              commodi aperiam temporibus quod nulla nesciunt aliquid debitis ullam omnis quos ipsam, aspernatur id\n              excepturi hic.</p>\n          </div>\n      </div>\n      </div>\n      <div className=\"footer-copyright text-center py-3\">© 2020 Copyright: GA Shark Pty Ltd</div>\n    </footer>\n    )\n}","import React from 'react';\n\nexport class Home extends React.Component {\n\nrender() {\n    return(\n        <html>\n        <header className=\"py-5 bg-image-full\" />\n        <img className=\"img-fluid d-block mx-auto\" src=\"http://placehold.it/200x200&text=Logo\" alt=\"\"/>\n      <section className=\"py-5\">\n        <div class=\"container\">\n          <h1>Section Heading</h1>\n          <p class=\"lead\">Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\n          <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquid, suscipit, rerum quos facilis repellat architecto commodi officia atque nemo facere eum non illo voluptatem quae delectus odit vel itaque amet.</p>\n        </div>\n      </section>\n      <section class=\"py-5 bg-image-full\">\n      </section>\n      <section class=\"py-5\">\n        <div class=\"container\">\n          <h1>Section Heading</h1>\n          <p class=\"lead\">Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\n          <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquid, suscipit, rerum quos facilis repellat architecto commodi officia atque nemo facere eum non illo voluptatem quae delectus odit vel itaque amet.</p>\n        </div>\n      </section>\n      </html>\n    )\n}\n}","import React from 'react';\n\nexport function Auth() {\n\n    return (\n        <div>\n\n        </div>\n    )\n};\n\n","import React from 'react';\nimport './App.css';\nimport { Route } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { Dashboard } from './components/Dashboard';\nimport { Footer } from './components/Footer';\nimport { Home } from './components/Home';\nimport {Auth} from './components/Auth';\n\nexport function App() {\n\n  // if(!loginState){\n  //   renderForm();\n  // } else {\n  //   renderLoggedIn()\n  // }\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Auth/>\n      <Route exact path={\"/\"} component={Home} />\n      <Route exact path={\"/dashboard\"} component={Dashboard} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n    <App />\n    </Router>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}