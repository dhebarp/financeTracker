{"version":3,"sources":["components/Navbar.js","components/Footer.js","components/Home.js","components/Auth.js","components/Signup.js","components/cashflowComponents/CashFlowCategories.js","components/cashflowComponents/CashflowExpensesChart.js","components/cashflowComponents/CashflowManager.js","components/cashflowComponents/CashflowForm.js","components/mortgageComponents/MortgageData.js","components/mortgageComponents/MortgageChart.js","components/mortgageComponents/MortgageManager.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","Fragment","className","to","Footer","Home","class","src","alt","React","Component","Auth","useState","user","setUser","password","setPassword","profile","setProfile","errors","setErrors","status","setStatus","useEffect","fetch","credentials","then","data","a","async","console","log","method","headers","body","JSON","stringify","username","userData","json","logout","catch","e","handleSubmit","event","preventDefault","style","onSubmit","type","value","onChange","target","userName","onClick","map","index","key","Signup","email","setEmail","firstName","setFirstName","lastName","setLastName","id","placeholder","months","categories","Chart","this","props","doughnutData","width","height","options","responsive","maintainAspectRatio","legend","position","barChartData","pieChartData","CashflowManager","incomes","setIncomes","expenses","setExpenses","slice","month","setMonth","doughnut","setDoughnut","pie","setPie","bar","setBar","newData","labels","datasets","Object","values","backgroundColor","updatedExpenses","amount","updatedCategoryList","category","label","err","scope","primaryIncome","investmentIncome","otherIncome","expense","name","CashflowForm","handleChange","i","setState","state","toggleIncome","showIncome","addExpense","newExpense","push","expenseName","expenseAmount","renderExpenses","for","categoryDropDown","createNewCashflow","mode","res","monthDropDown","renderAddForm","calculatePayments","principalAmount","rate","years","principal","parseFloat","CalculateInterest","calculatedPayments","x","Math","pow","monthly","monthlyPayment","toFixed","totalInterest","totalPayment","chartData","MortgageManager","setPrincipal","setRate","setYears","initialMonthlyPayment","initialTotalInterest","initialTotalPayment","setMonthlyPayment","setTotalInterest","setTotalPayment","parseInt","setChartData","newDataset","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2MAGO,SAASA,IAEd,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKC,UAAW,iDACd,wBAAIA,UAAU,cACZ,wBAAIA,UAAW,gBAAf,eACA,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAW,WAAYC,GAAG,KAAhC,UAEF,wBAAID,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAW,WAAYC,GAAG,aAAhC,aAEF,wBAAID,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAW,WAAYC,GAAG,aAAhC,qBAEF,wBAAID,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAW,WAAYC,GAAG,SAAhC,UAEF,wBAAID,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAW,WAAYC,GAAG,WAAhC,c,KCrBL,SAASC,IAEd,OACE,4BAAQF,UAAU,oCAChB,yBAAKA,UAAW,4CACd,yBAAKA,UAAU,OACb,yBAAKA,UAAW,yBACd,wBAAIA,UAAW,mCAAf,iBACA,qQAIF,wBAAIA,UAAW,kCACf,yBAAKA,UAAW,yBACd,wBAAIA,UAAW,mCAAf,iBACA,0PAMN,yBAAKA,UAAU,qCAAf,0C,4CCpBOG,EAAb,iLAGI,OACI,8BACA,4BAAQH,UAAU,uBAClB,6BAASA,UAAU,QACnB,yBAAKI,MAAM,aACT,8DACA,uBAAGA,MAAM,QAAT,uDACA,wIAGF,yBAAKJ,UAAU,4BAA4BK,IAAI,8CAA8CC,IAAI,KACjG,6BAASF,MAAM,QACf,yBAAKA,MAAM,aACT,mDACA,uBAAGA,MAAM,QAAT,yBACA,sPAGJ,6BAASA,MAAM,sBACf,yBAAKJ,UAAU,4BAA4BK,IAAI,2CAA2CC,IAAI,WAtBpG,GAA0BC,IAAMC,W,uBCDzB,SAASC,IAAQ,IAAD,EAEKC,mBAAS,IAFd,mBAEZC,EAFY,KAENC,EAFM,OAGaF,mBAAS,IAHtB,mBAGZG,EAHY,KAGFC,EAHE,OAIWJ,mBAAS,IAJpB,mBAIZK,EAJY,KAIHC,EAJG,OAKSN,mBAAS,IALlB,mBAKZO,EALY,KAKJC,EALI,OAMSR,oBAAS,GANlB,mBAMZS,EANY,KAMJC,EANI,KAQnBC,qBAAU,WAEZC,MAAM,YAAa,CAACC,YAAa,gBAChCC,MAAK,SAAMC,GAAN,SAAAC,EAAAC,OAAA,gDACiB,MAAhBF,EAAKN,SAEJS,QAAQC,IAAI,0BACZT,GAAU,GAGVE,MAAM,cACF,CACIQ,OAAQ,OACRP,YAAa,cACbQ,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,SAAUxB,EACVE,SAAUA,MAGjBW,MAAK,SAAMY,GAAN,eAAAV,EAAAC,OAAA,kEAAAD,EAAA,MACwBU,EAASC,QADjC,OACQtB,EADR,OAEEa,QAAQC,IAAId,GACZC,EAAWD,GACXK,GAAU,GACVF,EAAU,IALZ,yCAnBZ,2CA8BR,IAmCMoB,EAAS,WACbhB,MAAM,eACF,CACIC,YAAa,gBAEhBC,MAAK,SAAMC,GAAN,SAAAC,EAAAC,OAAA,gDACiB,MAAhBF,EAAKN,QAEJC,GAAU,GACVJ,EAAW,IACXE,EAAU,KAIVU,QAAQC,IAAI,qBATd,wCAcLU,OAAM,SAAAC,GACHZ,QAAQC,IAAIW,EAAErB,YAKlBsB,EAAe,SAACC,GAClBA,EAAMC,iBACNf,QAAQC,IAAI,sBA7DdP,MA+DkB,cA9Dd,CACIQ,OAAQ,OACRP,YAAa,cACbQ,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,SAAUxB,EACVE,SAAUA,MAGjBW,MAAK,SAAMC,GAAN,eAAAC,EAAAC,OAAA,mDACiB,MAAhBF,EAAKN,OADN,kCAAAO,EAAA,MAGwBD,EAAKY,QAH7B,OAGQtB,EAHR,OAIEa,QAAQC,IAAId,GACZC,EAAWD,GACXK,GAAU,GACVF,EAAU,IAPZ,OAUCO,EAAKN,OAAS,MAEbS,QAAQC,IAAI,kBACA,KAATlB,GACCO,EAAU,CAACO,EAAKN,OAAS,qBAd/B,wCAiBLoB,OAAM,SAAAC,GACHZ,QAAQC,IAAIW,EAAErB,YA+DxB,OACE,yBAAKyB,MAAO,CAAC,WAAc,UAErBzB,GA5BF,0BAAM0B,SAAUJ,GAChB,2CAEI,2BAAOK,KAAK,OAAOC,MAAOpC,EAAMqC,SAAU,SAACN,GAAD,OAAW9B,EAAQ8B,EAAMO,OAAOF,WAG9E,2CAEI,2BAAOD,KAAK,WAAWC,MAAOlC,EAAUmC,SAAU,SAACN,GAAD,OAAW5B,EAAY4B,EAAMO,OAAOF,WAE1F,2BAAOD,KAAK,SAASC,MAAM,YAmB1B5B,GAZD,6BACI,0DAAgCJ,EAAQA,QAAQmC,UAEhD,4BAAQC,QAASb,GAAjB,WAWDrB,EAAOmC,KAAI,SAACZ,EAAGa,GAAJ,OAAc,uBAAGC,IAAKD,GAAQb,OC7I3C,SAASe,IAAU,IAAD,EAEG7C,mBAAS,IAFZ,mBAEdC,EAFc,KAERC,EAFQ,OAGWF,mBAAS,IAHpB,mBAGdG,EAHc,KAGJC,EAHI,OAIKJ,mBAAS,IAJd,mBAId8C,EAJc,KAIPC,EAJO,OAKa/C,mBAAS,IALtB,mBAKdgD,EALc,KAKHC,EALG,OAMWjD,mBAAS,IANpB,mBAMdkD,EANc,KAMJC,EANI,KAsCrB,OACI,yBAAK7D,UAAU,aACX,0BAAM6C,SATO,SAACH,GAClBA,EAAMC,iBACNf,QAAQC,IAAI,sBAxBZP,MAAM,kBACF,CACIQ,OAAQ,OACRP,YAAa,cACbQ,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,SAAUxB,EACVE,SAAUA,EACV2C,MAAOA,EACPE,UAAWA,EACXE,SAAUA,MAGjBpC,MAAK,SAAMY,GAAN,eAAAV,EAAAC,OAAA,kEAAAD,EAAA,MACoBU,EAASC,QAD7B,OACItB,EADJ,OAEFa,QAAQC,IAAId,GAFV,0CAiBF,yBAAKf,UAAU,YACX,yBAAKA,UAAU,uBACX,wCACA,2BAAO8C,KAAK,QAAQ1C,MAAM,eAAe0D,GAAG,cAAcC,YAAY,QAAQf,SAAU,SAACN,GAAD,OAAWe,EAASf,EAAMO,OAAOF,WAE7H,yBAAK/C,UAAU,uBACX,2CACA,2BAAO8C,KAAK,WAAW1C,MAAM,eAAe0D,GAAG,iBAAiBC,YAAY,WAAWf,SAAU,SAACN,GAAD,OAAW5B,EAAY4B,EAAMO,OAAOF,WAEzI,yBAAK/C,UAAU,uBACX,4CACA,2BAAO8C,KAAK,OAAO1C,MAAM,eAAe0D,GAAG,WAAWC,YAAY,eAAef,SAAU,SAACN,GAAD,OAAW9B,EAAQ8B,EAAMO,OAAOF,YAGnI,yBAAK/C,UAAU,YACX,yBAAKA,UAAU,uBACX,6CACA,2BAAQ8C,KAAK,OAAO1C,MAAM,eAAe0D,GAAG,YAAYC,YAAY,aAAaf,SAAU,SAACN,GAAD,OAAWiB,EAAajB,EAAMO,OAAOF,WAEpI,yBAAK/C,UAAU,uBACX,6CACA,2BAAQ8C,KAAK,OAAO1C,MAAM,eAAe0D,GAAG,WAAWC,YAAY,YAAYf,SAAU,SAACN,GAAD,OAAWmB,EAAYnB,EAAMO,OAAOF,YA4BrI,4BAAQD,KAAK,SAAS1C,MAAM,mBAA5B,YC5FT,IAAM4D,EAAS,CAClB,gBACA,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGSC,EAAa,CACtB,gBACA,OACA,gBACA,SACA,YACA,aACA,UACA,OACA,WACA,UACA,OACA,Y,QCeWC,E,iLArCP,OACI,kBAAC,IAAMnE,SAAP,KACI,yBAAKC,UAAW,aACZ,yBAAKI,MAAM,OACP,yBAAKA,MAAM,OACP,kBAAC,IAAD,CACIqB,KAAM0C,KAAKC,MAAMC,aACjBC,MAAO,IACPC,OAAQ,IACRC,QAAS,CAAEC,YAAY,EAAMC,qBAAqB,EAAOC,OAAQ,CAAEC,SAAU,aAGrF,yBAAKxE,MAAM,OACP,kBAAC,IAAD,CACIqB,KAAM0C,KAAKC,MAAMS,aACjBP,MAAO,IACPC,OAAQ,IACRC,QAAS,CACLC,YAAY,EAAMC,qBAAqB,EAAOC,OAAQ,CAAEC,SAAU,WAG9E,yBAAKxE,MAAM,OACP,kBAAC,IAAD,CACIqB,KAAM0C,KAAKC,MAAMU,aACjBR,MAAO,IACPC,OAAQ,IACRC,QAAS,CACLC,YAAY,EAAMC,qBAAqB,EAAOC,OAAQ,CAAEC,SAAU,kB,GA9BlFrE,IAAMC,WCEnB,SAASuE,IAAmB,IAAD,EAEFrE,mBAAS,IAFP,mBAEzBsE,EAFyB,KAEhBC,EAFgB,OAGAvE,mBAAS,IAHT,mBAGzBwE,EAHyB,KAGfC,EAHe,OAIAzE,mBAASuD,EAAWmB,MAAM,EAAG,KAJ7B,gCAMN1E,mBAAS,KANH,mBAMzB2E,EANyB,KAMlBC,EANkB,OAOA5E,mBAAS,IAPT,mBAOzB6E,EAPyB,KAOfC,EAPe,OAQV9E,mBAAS,IARC,mBAQzB+E,EARyB,KAQpBC,EARoB,OASVhF,mBAAS,IATC,mBASzBiF,EATyB,KASpBC,EAToB,KAyDhC,OA5CAvE,qBAAU,WACRC,MAAM,kBAAD,OAAmB+D,GACtB,CACEvD,OAAQ,MACRP,YAAa,gBAEdC,MAAK,SAAMC,GAAN,mBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACkBD,EAAKY,QADvB,OACEwD,EADF,OAEJZ,EAAWY,EAAQ,GAAGb,SACtBG,EAAYU,EAAQ,GAAGX,UAEvBQ,EAAO,CACLI,OAAQ,CAAC,iBAAkB,oBAAqB,gBAChDC,SAAU,CAAC,CACTtE,KAAMuE,OAAOC,OAAOJ,EAAQ,GAAGb,SAC/BkB,gBAAiB,CAAC,0BAA0B,wBAAwB,gCAGlEC,EAAkBN,EAAQ,GAAGX,SAASE,MAAM,EAAG,KAAKhC,KAAI,SAAA1B,GAAC,OAAIA,EAAE0E,UAC/DC,EAAsBR,EAAQ,GAAGX,SAASE,MAAM,EAAG,KAAKhC,KAAI,SAAA1B,GAAC,OAAIA,EAAE4E,YAEzEd,EAAY,CACVM,OAAQO,EACRN,SAAU,CAAC,CACTtE,KAAM0E,EACND,gBAAiB,CAAC,0BAA0B,wBAAwB,2BAA2B,2BAA2B,2BAA2B,yBAAyB,wBAAwB,0BAA0B,0BAA0B,2BAA2B,4BAGzRN,EAAO,CACLE,OAAQO,EACRN,SAAU,CAAC,CACTQ,MAAO,WACP9E,KAAM0E,EACND,gBAAiB,CAAC,0BAA0B,wBAAwB,2BAA2B,2BAC7F,2BAA2B,yBAAyB,wBAAwB,0BAA0B,0BACtG,2BAA2B,4BA7B7B,yCAgCH3D,OAAM,SAAAiE,GACP5E,QAAQC,IAAI2E,QAEf,CAACnB,IAIF,kBAAC,IAAMtF,SAAP,KAEE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,mCACb,4BAAQA,UAAU,gBAAgB+C,MAAOsC,EAAOrC,SAAU,SAACN,GAAD,OAAW4C,EAAS5C,EAAMO,OAAOF,SACxFiB,EAAOZ,KAAI,SAACiC,EAAOhC,GAClB,OAAO,4BAAQC,IAAKD,EAAMgC,OAAQA,OAGtC,gCAAQ,kBAAC,IAAD,CAAMpF,GAAG,iBAAT,4BAGZ,kBAAC,EAAD,CAAOoE,aAAckB,EAAUV,aAAcc,EAAKb,aAAcW,IAChE,6BACA,yBAAKzF,UAAU,aACb,2BAAOA,UAAU,qBACf,+BACE,4BACE,wBAAIyG,MAAM,OAAV,kBACA,wBAAIA,MAAM,OAAV,qBACA,wBAAIA,MAAM,OAAV,kBAGJ,+BACA,4BACM,gCAAMzB,EAAQ0B,eACd,gCAAM1B,EAAQ2B,kBACd,gCAAM3B,EAAQ4B,iBAKxB,6BACA,yBAAK5G,UAAU,aACb,2BAAOA,UAAU,qBACf,+BACE,4BACE,wBAAIyG,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,oBACA,wBAAIA,MAAM,OAAV,YAGJ,+BACGvB,EAASE,MAAM,EAAE,IAAIhC,KAAI,SAACyD,EAASxD,GAClC,OAAQ,4BACN,wBAAIC,IAAKD,EAAMyD,MAAOD,EAAQC,MAC9B,wBAAIxD,IAAKD,EAAMiD,UAAWO,EAAQP,UAClC,wBAAIhD,IAAKD,EAAM+C,QAAf,IAAyBS,EAAQT,gB,4BC5GpCW,EAAb,YACI,WAAY3C,GAAQ,IAAD,8BACf,4CAAMA,KASV4C,aAAe,SAACtE,EAAOuE,GACnBvE,EAAMC,iBAEN,IAAMmE,EAAOpE,EAAMO,OAAO6D,KACpB/D,EAAQL,EAAMO,OAAOF,MACd,UAAT+D,EACA,EAAKI,SAAS,CACV7B,MAAOtC,IAEK,kBAAT+D,EACP,EAAKI,SAAS,CACVlC,QAAQ,eAAM,EAAKmC,MAAMnC,QAAlB,CAA2B0B,cAAe3D,MAErC,qBAAT+D,EACP,EAAKI,SAAS,CACVlC,QAAQ,eAAM,EAAKmC,MAAMnC,QAAlB,CAA2B2B,iBAAkB5D,MAExC,gBAAT+D,EACP,EAAKI,SAAS,CACVlC,QAAQ,eAAM,EAAKmC,MAAMnC,QAAlB,CAA2B4B,YAAa7D,MAQnD,EAAKmE,SAAL,eAAiBJ,EAAO/D,KArCb,EAwCnBqE,aAAe,SAAC1E,GACZA,EAAMC,iBACN,EAAKuE,UAAS,SAACC,EAAO/C,GAAR,MAAmB,CAC7BiD,YAAaF,EAAME,gBA3CR,EAkEnBC,WAAa,SAAC5E,GACVA,EAAMC,iBACN,IAAM4E,EAAU,YAAO,EAAKJ,MAAMjC,UAClCqC,EAAWC,KAAK,CAAEV,KAAM,EAAKK,MAAMM,YAAanB,SAAU,EAAKa,MAAMb,SAAUF,OAAQ,EAAKe,MAAMO,gBAClG,EAAKR,SAAS,CACVhC,SAAUqC,KAvEC,EA2EnBI,eAAiB,SAACtE,GACd,OACI,kBAAC,IAAMtD,SAAP,KACI,yBAAKC,UAAU,kBACX,2BAAO4H,IAAI,4BAAX,iBACA,2BAAOd,KAAK,cAAcxD,IAAKD,EAAOP,KAAK,OAAO9C,UAAU,eAAe8D,GAAG,2BAA2BC,YAAY,kBAAkBf,SAAU,EAAKgE,gBAG1J,yBAAK5G,MAAM,kBACP,2BAAOwH,IAAI,6BAAX,YACA,4BAAQd,KAAK,WAAWxD,IAAKD,EAAOjD,MAAM,eAAe0D,GAAG,4BAA4Bd,SAAU,EAAKgE,cAClG,EAAKa,qBAGd,yBAAK7H,UAAU,kBACX,2BAAO4H,IAAI,4BAAX,mBACA,2BAAOd,KAAK,gBAAgBxD,IAAKD,EAAOP,KAAK,SAAS9C,UAAU,eAAe8D,GAAG,2BAA2BC,YAAY,SAASf,SAAU,EAAKgE,kBA3F9I,EA6GnBvE,aAAe,SAACC,GACZA,EAAMC,iBACNf,QAAQC,IAAI,EAAKsF,OAEjB,EAAKW,qBAjHU,EAsHnBA,kBAAoB,WAEhBxG,MAAM,eAAgB,CAClBQ,OAAQ,OACRiG,KAAM,OACNhG,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdR,YAAa,cACbS,KAAMC,KAAKC,UAAU,CACjBmD,MAAO,EAAK8B,MAAM9B,MAClBL,QAAS,CACL0B,eAAgB,EAAKS,MAAMnC,QAAQ0B,cACnCC,kBAAmB,EAAKQ,MAAMnC,QAAQ2B,iBACtCC,aAAc,EAAKO,MAAMnC,QAAQ4B,aAErC1B,SAAU,EAAKiC,MAAMjC,aAE1B1D,MAAK,SAACwG,GAAD,OAASA,EAAI3F,UAChBb,MAAK,SAACC,GACHG,QAAQC,IAAI,QAASJ,OAzI7B,EAAK0F,MAAQ,CACT9B,MAAO,GACPgC,YAAY,EACZrC,QAAS,GACTE,SAAU,IANC,EADvB,6EAiDQ,OACI,kBAAC,IAAMnF,SAAP,KACI,yBAAKC,UAAU,kBACX,2BAAO4H,IAAI,4BAAX,+BACA,2BAAO7E,MAAOoB,KAAKgD,MAAMnC,QAAQ0B,cAAeI,KAAK,gBAAgBhE,KAAK,SAAS9C,UAAU,eAAegD,SAAUmB,KAAK6C,gBAE/H,yBAAKhH,UAAU,kBACX,2BAAO4H,IAAI,4BAAX,+BACA,2BAAO7E,MAAOoB,KAAKgD,MAAMR,iBAAkBG,KAAK,mBAAmBhE,KAAK,SAAS9C,UAAU,eAAegD,SAAUmB,KAAK6C,gBAE7H,yBAAKhH,UAAU,kBACX,2BAAO4H,IAAI,4BAAX,gBACA,2BAAO7E,MAAOoB,KAAKgD,MAAMP,YAAaE,KAAK,cAAchE,KAAK,SAAS9C,UAAU,eAAegD,SAAUmB,KAAK6C,gBAEnH,gCA/DhB,sCAkGQ,OAAOhD,EAAOZ,KAAI,SAAAiC,GACd,OAAO,gCAASA,QAnG5B,yCAuGQ,OAAOpB,EAAWb,KAAI,SAAAkD,GAClB,OAAO,gCAASA,QAxG5B,+BAoJc,IAAD,OACL,OACI,yBAAKtG,UAAU,SACX,yBAAKA,UAAU,aACX,0BAAM6C,SAAUsB,KAAK1B,cACjB,4BAAQrC,MAAM,uBAAuB+C,QAASgB,KAAKiD,cAAnD,cACA,yBAAKhH,MAAM,kBACP,2BAAOwH,IAAI,6BAAX,UACA,4BAAQd,KAAK,QAAQ1G,MAAM,eAAe4C,SAAUmB,KAAK6C,cACpD7C,KAAK8D,kBAGb9D,KAAKgD,MAAME,YAAclD,KAAK+D,gBAC9B/D,KAAKgD,MAAMjC,SAAS9B,KAAI,SAACyD,EAASxD,GAC/B,OAAO,yBAAKC,IAAKD,GAAQ,EAAKsE,eAAed,EAASxD,OAE1D,4BAAQjD,MAAM,uBAAuB+C,QAASgB,KAAKmD,YAAnD,eACA,4BAAQxE,KAAK,SAAS1C,MAAM,kBAAkB+C,QAASgB,KAAK1B,cAA5D,wBArKxB,GAAkClC,IAAMC,WCDjC,SAAS2H,EAAkBC,EAAiBC,EAAMC,GAErD,IAAMC,EAAYC,WAAWJ,GACzBK,EAAoBD,WAAWH,GAAQ,IAAM,GAC7CK,EAAyC,GAApBF,WAAWF,GAIhCK,EAAIC,KAAKC,IAAI,EAAIJ,EAAmBC,GACpCI,EAAWP,EAAYI,EAAIF,GAAsBE,EAAI,GAW3D,MAAO,CAACI,eAVeD,EAAQE,QAAQ,GAUfC,eANDH,EAAUJ,EAAqBH,GAAWS,QAAQ,GAMlCE,cAFjBJ,EAAUJ,GAAoBM,QAAQ,I,ICA/C9E,E,iLAbP,OACI,yBAAKlE,UAAW,aACZ,kBAAC,IAAD,CACIyB,KAAM0C,KAAKC,MAAM+E,UACjB7E,MAAO,IACPC,OAAQ,IACRC,QAAS,CAAEC,YAAY,EAAMC,qBAAqB,U,GATlDnE,IAAMC,WCCnB,SAAS4I,IAAmB,IAAD,EAEE1I,mBAAS,KAFX,mBAEzB6H,EAFyB,KAEdc,EAFc,OAGR3I,mBAAS,GAHD,mBAGzB2H,EAHyB,KAGnBiB,EAHmB,OAIN5I,mBAAS,IAJH,mBAIzB4H,EAJyB,KAIlBiB,EAJkB,OAK0FpB,EAAkBI,EAAWF,EAAMC,GAArIkB,EALQ,EAKxBT,eAAsDU,EAL9B,EAKeR,cAAmDS,EALlE,EAKoDR,aALpD,EAOYxI,mBAAS8I,GAPrB,mBAOzBT,EAPyB,KAOTY,EAPS,OAQUjJ,mBAAS+I,GARnB,mBAQzBR,EARyB,KAQVW,EARU,OASQlJ,mBAASgJ,GATjB,mBASzBR,EATyB,KASXW,EATW,OAYEnJ,mBAAS,CACzCoF,OAAQ,CAAC,mBAAoB,WAAY,WACzCC,SAAU,CAAC,CACTtE,KAAM,CACJqI,SAASf,GACTe,SAASb,GACTa,SAASZ,IAEXhD,gBAAiB,CAAC,0BAA2B,sBAAuB,wBAAyB,6BApBjE,mBAYzBiD,EAZyB,KAYdY,EAZc,KA8BhC,OACE,yBAAK/J,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,0BAAM6C,SATO,SAACH,GACpBA,EAAMC,mBASE,yBAAK3C,UAAU,eACb,gDACA,2BAAO8G,KAAK,YAAYhE,KAAK,eAAeC,MAAOwF,EAAWvI,UAAU,0BAA0B+D,YAAY,UAAUf,SAAU,SAAAR,GAChI6G,EAAa7G,EAAES,OAAOF,OAD+G,MAE7EoF,EAAkB3F,EAAES,OAAOF,MAAOsF,EAAMC,GAAxFS,EAF6H,EAE7HA,eAAgBE,EAF6G,EAE7GA,cAAeC,EAF8F,EAE9FA,aAEvCS,EAAkBG,SAASf,EAAgB,KAC3Ca,EAAiBE,SAASb,EAAe,KACzCY,EAAgBC,SAASZ,EAAc,KACvC,IAAMc,EAAU,eAAQb,GACxBa,EAAWjE,SAAS,GAAGtE,KAAO,CAACsH,EAAgBE,EAAeC,GAE9Da,EAAaC,OAGjB,yBAAKhK,UAAU,eACb,uCACA,2BAAO8G,KAAK,QAAQhE,KAAK,QAAQC,MAAOuF,EAAOtI,UAAU,0BAA0B+D,YAAY,WAAWf,SAAU,SAAAR,GAClH+G,EAAS/G,EAAES,OAAOF,OADqG,MAE/DoF,EAAkBI,EAAWF,EAAM7F,EAAES,OAAOF,OAA5FgG,EAF+G,EAE/GA,eAAgBE,EAF+F,EAE/FA,cAAeC,EAFgF,EAEhFA,aACvCS,EAAkBZ,GAClBa,EAAiBX,GACjBY,EAAgBX,OAGpB,yBAAKlJ,UAAU,eACb,gDACA,2BAAO8G,KAAK,WAAWhE,KAAK,WAAWC,MAAOsF,EAAMrI,UAAU,0BAA0B+D,YAAY,OAAOf,SAAU,SAAAR,GACnH8G,EAAQ9G,EAAES,OAAOF,OADuG,MAEhEoF,EAAkBI,EAAW/F,EAAES,OAAOF,MAAOuF,GAA7FS,EAFgH,EAEhHA,eAAgBE,EAFgG,EAEhGA,cAAeC,EAFiF,EAEjFA,aACvCS,EAAkBZ,GAClBa,EAAiBX,GACjBY,EAAgBX,MAElB,uDAIN,yBAAKlJ,UAAU,OACb,kBAAC,EAAD,CAAOmJ,UAAWA,OC3Cbc,MApBR,WAEL,OACE,yBAAKjK,UAAU,OACb,kBAACF,EAAD,MAEA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOoK,OAAK,EAACC,KAAM,IAAKC,UAAWjK,IACnC,kBAAC,IAAD,CAAO+J,OAAK,EAACC,KAAM,YAAaC,UAAWhB,IAC3C,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAM,QAASC,UAAW3J,IACvC,kBAAC,IAAD,CAAOyJ,OAAK,EAACC,KAAM,UAAWC,UAAW7G,IACzC,kBAAC,IAAD,CAAO2G,OAAK,EAACC,KAAM,YAAaC,UAAWrF,IAC3C,kBAAC,IAAD,CAAOmF,OAAK,EAACC,KAAM,gBAAiBC,UAAWrD,KAG/C,kBAAC7G,EAAD,QClBcmK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,cCRNC,IAASC,OACL,kBAAC,IAAD,KACA,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxJ,MAAK,SAAAyJ,GACjCA,EAAaC,iB","file":"static/js/main.dced662f.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport function Navbar() {\n\n  return (\n    <React.Fragment>\n      <nav className={\"navbar navbar-expand-lg navbar-light bg-light\"}>\n        <ul className=\"navbar-nav\">\n          <li className={\"navbar-brand\"}>A.L.F.R.E.D</li>\n          <li className=\"nav-item active\">\n            <Link className={\"nav-link\"} to='/'>Home </Link>\n          </li>\n          <li className=\"nav-item active\">\n            <Link className={\"nav-link\"} to='/cashflow'>Cashflow</Link>\n          </li>\n          <li className=\"nav-item active\">\n            <Link className={\"nav-link\"} to='/mortgage'>Mortgage Manager</Link>\n          </li>\n          <li className=\"nav-item active\">\n            <Link className={\"nav-link\"} to='/auth'>Login</Link>\n          </li>\n          <li className=\"nav-item active\">\n            <Link className={\"nav-link\"} to='/signup'>Signup</Link>\n          </li>\n        </ul>\n      </nav>\n    </React.Fragment>\n  )\n}","import React from 'react';\n\nexport function Footer()\n{\n  return (\n    <footer className=\"page-footer font-small teal pt-4\">\n      <div className={\"container-fluid text-center text-md-left\"}>\n        <div className=\"row\">\n          <div className={\"col-md-6 mt-md-0 mt-3\"}>\n            <h5 className={\"text-uppercase font-weight-bold\"}>Footer text 1</h5>\n            <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Expedita sapiente sint, nulla, nihil\n              repudiandae commodi voluptatibus corrupti animi sequi aliquid magnam debitis, maxime quam recusandae\n              harum esse fugiat. Itaque, culpa?</p>\n          </div>\n          <hr className={\"clearfix w-100 d-md-none pb-3\"}/>\n          <div className={\"col-md-6 mb-md-0 mb-3\"}>\n            <h5 className={\"text-uppercase font-weight-bold\"}>Footer text 2</h5>\n            <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Optio deserunt fuga perferendis modi earum\n              commodi aperiam temporibus quod nulla nesciunt aliquid debitis ullam omnis quos ipsam, aspernatur id\n              excepturi hic.</p>\n          </div>\n      </div>\n      </div>\n      <div className=\"footer-copyright text-center py-3\">© 2020 Copyright: GA Shark Pty Ltd</div>\n    </footer>\n    )\n}","import React from 'react';\nimport '../App.css'\n\nexport class Home extends React.Component {\n\nrender() {\n    return(\n        <html>\n        <header className=\"py-5 bg-image-full\" />\n        <section className=\"py-5\">\n        <div class=\"container\">\n          <h1>GA SHARK PRESENTS: A.L.F.R.E.D</h1>\n          <p class=\"lead\">Adult | Life | Finance | Related | Education | Demo</p>\n          <p>Did you ever grow up and not learn how to manage money? Well look no further as ALFRED is here to help.</p>\n        </div>\n      </section>\n        <img className=\"img-fluid d-block mx-auto\" src=\"/images/afg-online-corporate-graphic-02.png\" alt=\"\"/>\n        <section class=\"py-5\">\n        <div class=\"container\">\n          <h1>Key Knowledge Areas</h1>\n          <p class=\"lead\">What Will you learn? </p>\n          <p>Within the application you will have access to our proprietary software that will dynamically create cashflow, mortgage and asset management models for you to learn and see how your daily finances can be improved.</p>\n        </div>\n      </section>\n      <section class=\"py-5 bg-image-full\">\n      <img className=\"img-fluid d-block mx-auto\" src=\"/images/cognitive-technology-finance.jpg\" alt=\"\"/>\n      </section>\n      </html>\n    )\n}\n}","import React, { useState, useEffect} from 'react';\n\nexport function Auth() {\n\n    const [user, setUser] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [profile, setProfile] = useState({});\n    const [errors, setErrors] = useState([]);\n    const [status, setStatus] = useState(false);\n\n    useEffect(() => {\n//   const queryUserStatus = (headers, url) => { \n  fetch('/mortgage', {credentials: \"same-origin\"})\n  .then(async data => {\n      if(data.status === 201)\n      {\n          console.log(\"Mortgage route active!\");\n          setStatus(false);\n\n          //get the user information\n          fetch('/auth/login',\n              {\n                  method: \"POST\",\n                  credentials: \"same-origin\",\n                  headers: {\n                      \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify({\n                      username: user,\n                      password: password\n                  })\n              })\n              .then(async userData => {\n                      const profile = await userData.json();\n                      console.log(profile);\n                      setProfile(profile);\n                      setStatus(true);\n                      setErrors([])\n              })\n      }\n  })\n},);\n\nconst queryUserStatus = (url) => {\n  fetch(url,\n      {\n          method: \"POST\",\n          credentials: \"same-origin\",\n          headers: {\n              \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n              username: user,\n              password: password\n          })\n      })\n      .then(async data => {\n          if(data.status === 201)\n          {\n              const profile = await data.json();\n              console.log(profile);\n              setProfile(profile);\n              setStatus(true);\n              setErrors([])\n          }\n\n          if(data.status > 299)\n          {\n              console.log(\"user not found\");\n              if(user !== \"\")\n                  setErrors([data.status + \" user not found\"])\n          }\n      })\n      .catch(e => {\n          console.log(e.status);\n      });\n};\n\nconst logout = () => {\n  fetch('/auth/logout',\n      {\n          credentials: \"same-origin\",\n      })\n      .then(async data => {\n          if(data.status === 200)\n          {\n              setStatus(false);\n              setProfile({});\n              setErrors([])\n          }\n          else\n          {\n              console.log(\"error logging out\");\n            //   if(user !== \"\")\n            //       setErrors([\"Error loggin out\"])\n          }\n      })\n      .catch(e => {\n          console.log(e.status);\n      });\n};\n\n\nconst handleSubmit = (event) => {\n    event.preventDefault();\n    console.log('you clicked submit');\n\n    queryUserStatus('/auth/login');\n};\n\nconst renderForm = () => {\n  return (\n      <form onSubmit={handleSubmit}>\n      <label>\n          Username:\n          <input type=\"text\" value={user} onChange={(event) => setUser(event.target.value)} />\n      </label>\n\n      <label>\n          password:\n          <input type=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n  </form>\n  )\n};\n\nconst renderWelcome = () => {\n  return (\n      <div>\n          <p>You are logged in!, welcome {profile.profile.userName}</p>\n\n          <button onClick={logout} >Logout</button>\n      </div>\n  )\n};\n\nreturn (\n  <div style={{\"paddingTop\": \"20px\"}}>\n\n      {!status && renderForm()}\n      {status && renderWelcome()}\n\n      {  errors.map((e, index) => <p key={index}>{e}</p>)  }\n  </div>\n)\n}\n\n","import React, { useState } from 'react';\n\nexport function Signup() {\n\n    const [user, setUser] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    \n    const signupform = () => {\n        fetch('/public/newuser',\n            {\n                method: \"POST\",\n                credentials: \"same-origin\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    username: user,\n                    password: password,\n                    email: email,\n                    firstName: firstName,\n                    lastName: lastName\n                })\n            })\n            .then(async userData => {\n                const profile = await userData.json();\n                console.log(profile);\n            })\n    }\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log('you clicked submit');\n  \n        signupform();\n    };\n\n    return (\n        <div className=\"container\">\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-row\">\n                    <div className=\"form-group col-md-4\">\n                        <label>Email</label>\n                        <input type=\"email\" class=\"form-control\" id=\"inputEmail4\" placeholder=\"Email\" onChange={(event) => setEmail(event.target.value)} />\n                    </div>\n                    <div className=\"form-group col-md-4\">\n                        <label>Password</label>\n                        <input type=\"password\" class=\"form-control\" id=\"inputPassword4\" placeholder=\"Password\" onChange={(event) => setPassword(event.target.value)} />\n                    </div>\n                    <div className=\"form-group col-md-4\">\n                        <label>User Name</label>\n                        <input type=\"text\" class=\"form-control\" id=\"userName\" placeholder=\"JohnSmith123\" onChange={(event) => setUser(event.target.value)} />\n                    </div>\n                </div>\n                <div className=\"form-row\">\n                    <div className=\"form-group col-md-6\">\n                        <label>First Name</label>\n                        <input  type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"First Name\" onChange={(event) => setFirstName(event.target.value)} />\n                    </div>\n                    <div className=\"form-group col-md-6\">\n                        <label>First Name</label>\n                        <input  type=\"text\" class=\"form-control\" id=\"lastName\" placeholder=\"Last Name\" onChange={(event) => setLastName(event.target.value)} />\n                    </div>\n                </div>\n                {/* <div class=\"form-group\">\n    <label for=\"inputAddress\">Address</label>\n    <input type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\"/>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"inputAddress2\">Address 2</label>\n    <input type=\"text\" class=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\"/>\n  </div> */}\n                {/* <div class=\"form-row\">\n    <div class=\"form-group col-md-6\">\n      <label for=\"inputCity\">City</label>\n      <input type=\"text\" class=\"form-control\" id=\"inputCity\"/>\n    </div> */}\n                {/* <div class=\"form-group col-md-4\">\n      <label for=\"inputState\">State</label>\n      <select id=\"inputState\" class=\"form-control\">\n        <option selected>Choose...</option>\n        <option>...</option>\n      </select>\n    </div> */}\n                {/* <div class=\"form-group col-md-2\">\n      <label for=\"inputZip\">Zip</label>\n      <input type=\"text\" class=\"form-control\" id=\"inputZip\"/>\n    </div> */}\n                {/* </div> */}\n                <button type=\"submit\" class=\"btn btn-primary\" >Create</button>\n            </form>\n        </div>\n    )\n}","export const months = [\n    \"Please Select\",\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n];\n\nexport const categories = [\n    \"Please Select\",\n    \"Food\",\n    \"Entertainment\", \n    \"Travel\",\n    \"Utilities\",\n    \"Repayments\",\n    \"Medical\",\n    \"Misc\",\n    \"Shopping\",\n    \"Housing\",\n    \"Pets\",\n    \"Holidays\"\n];\n","import React from 'react';\nimport { Doughnut, Bar, Pie } from 'react-chartjs-2';\n\nclass Chart extends React.Component {\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className={'container'}>\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <Doughnut\n                                data={this.props.doughnutData}\n                                width={200}\n                                height={200}\n                                options={{ responsive: true, maintainAspectRatio: false, legend: { position: \"right\" } }}\n                            />\n                        </div>\n                        <div class=\"col\">\n                            <Bar\n                                data={this.props.barChartData}\n                                width={200}\n                                height={200}\n                                options={{\n                                    responsive: true, maintainAspectRatio: false, legend: { position: \"top\"}}}\n                            />\n                        </div>\n                        <div class=\"col\">\n                            <Pie\n                                data={this.props.pieChartData}\n                                width={200}\n                                height={200}\n                                options={{\n                                    responsive: true, maintainAspectRatio: false, legend: { position: \"top\" } }}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Chart;","import React, { useState, useEffect } from 'react';\nimport { categories, months } from './CashFlowCategories';\nimport Chart from './CashflowExpensesChart';\nimport {Link} from 'react-router-dom';\n\nexport function CashflowManager() {\n\n  const [incomes, setIncomes] = useState({});\n  const [expenses, setExpenses] = useState([]);\n  const [category, setCategory] = useState(categories.slice(1, 12));\n  // add calculations to state here\n  const [month, setMonth] = useState('');\n  const [doughnut, setDoughnut] = useState({});\n  const [pie, setPie] = useState({});\n  const [bar, setBar] = useState({});\n\n\n\n  useEffect(() => {\n    fetch(`/cashflow/view/${month}`,\n      {\n        method: \"GET\",\n        credentials: \"same-origin\",\n      })\n      .then(async data => {\n        const newData = await data.json();\n        setIncomes(newData[0].incomes);\n        setExpenses(newData[0].expenses);\n        // setCategory(newData[0].expenses);\n        setPie({\n          labels: [\"Primary Income\", \"Investment Income\", \"Other Income\"],\n          datasets: [{\n            data: Object.values(newData[0].incomes), \n            backgroundColor: ['rgba(115, 24, 111, 0.9)','rgba(37, 42, 17, 0.6)','rgba(182, 158, 125, 0.8)']\n          }]\n        });\n        const updatedExpenses = newData[0].expenses.slice(1, 100).map(a => a.amount);\n        const updatedCategoryList = newData[0].expenses.slice(1, 100).map(a => a.category);\n\n        setDoughnut({\n          labels: updatedCategoryList, \n          datasets: [{\n            data: updatedExpenses,\n            backgroundColor: ['rgba(115, 24, 111, 0.9)','rgba(37, 42, 17, 0.6)','rgba(182, 158, 125, 0.8)','rgba(183, 164, 179, 0.8)','rgba(137, 105, 111, 0.6)','rgba(22, 128, 92, 0.5)','rgba(253, 69, 43, 0.5','rgba(113, 200, 49, 0.8)','rgba(253, 149, 36, 0.8)','rgba(145, 232, 131, 0.7)','rgba(5, 214, 225, 1)']\n          }]\n        });\n        setBar({\n          labels: updatedCategoryList, \n          datasets: [{\n            label: \"Expenses\",\n            data: updatedExpenses, \n            backgroundColor: ['rgba(115, 24, 111, 0.9)','rgba(37, 42, 17, 0.6)','rgba(182, 158, 125, 0.8)','rgba(183, 164, 179, 0.8)',\n              'rgba(137, 105, 111, 0.6)','rgba(22, 128, 92, 0.5)','rgba(253, 69, 43, 0.5','rgba(113, 200, 49, 0.8)','rgba(253, 149, 36, 0.8)',\n              'rgba(145, 232, 131, 0.7)','rgba(5, 214, 225, 1)']\n          }]\n        });\n      }).catch(err => {\n        console.log(err);\n      })\n  }, [month]);\n\n\n  return (\n    <React.Fragment>\n      \n      <div className=\"container\">\n        <div className=\"input-group input-group-sm mb-3\">\n          <select className=\"custom-select\" value={month} onChange={(event) => setMonth(event.target.value)} >\n            {months.map((month, index) => {\n              return <option key={index.month}>{month}</option>\n            })}\n          </select>\n          <button><Link to='/cashflowform'>Add Monthly Cashflow </Link></button>\n        </div>\n      </div>\n      <Chart doughnutData={doughnut} barChartData={bar} pieChartData={pie}/>\n      <br />\n      <div className=\"container\">\n        <table className=\"table table-hover\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Primary Income</th>\n              <th scope=\"col\">Investment Income</th>\n              <th scope=\"col\">Other Income</th>\n            </tr>\n          </thead>\n          <tbody>\n          <tr>\n                <td>${incomes.primaryIncome}</td>\n                <td>${incomes.investmentIncome}</td>\n                <td>${incomes.otherIncome}</td>\n              </tr>\n          </tbody>\n        </table>\n      </div>\n      <br/>\n      <div className=\"container\">\n        <table className=\"table table-hover\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Expense Name</th>\n              <th scope=\"col\">Expense Category</th>\n              <th scope=\"col\">Amount</th>\n            </tr>\n          </thead>\n          <tbody>\n            {expenses.slice(1,50).map((expense, index) => { //bit of a hack, need to fix this! \n              return (<tr>\n                <td key={index.name}>{expense.name}</td>\n                <td key={index.category}>{expense.category}</td>\n                <td key={index.amount}>${expense.amount}</td>\n              </tr>)\n            })}\n          </tbody>\n        </table>\n      </div>\n    </React.Fragment>\n  )\n}","import React from 'react';\nimport { months, categories } from './CashFlowCategories';\nexport class CashflowForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            month: \"\",\n            showIncome: false,\n            incomes: {},\n            expenses: []\n        }\n    }\n    // render income when button pressed\n    handleChange = (event, i) => {\n        event.preventDefault();\n        // console.log('you clicked submit');\n        const name = event.target.name;\n        const value = event.target.value;\n        if (name === \"month\") {\n            this.setState({\n                month: value\n            })\n        } else if (name === \"primaryIncome\") {\n            this.setState({\n                incomes: { ...this.state.incomes, primaryIncome: value }\n            })\n        } else if (name === \"investmentIncome\") {\n            this.setState({\n                incomes: { ...this.state.incomes, investmentIncome: value }\n            })\n        } else if (name === \"otherIncome\") {\n            this.setState({\n                incomes: { ...this.state.incomes, otherIncome: value }\n            })\n            // } else if (name === \"\") {\n            //     this.setState({SCAnswer: event.target.value});\n            //     const expenseGroup = this.state.;\n            //     SCAnswerGroup[i] = event.target.value;\n            //     this.setState({SCAnswerGroup});\n        } else {\n            this.setState({ [name]: value });\n        }\n    };\n    toggleIncome = (event) => {\n        event.preventDefault();\n        this.setState((state, props) => ({\n            showIncome: !state.showIncome\n        })\n        )\n    }\n    renderAddForm() {\n        return (\n            <React.Fragment>\n                <div className=\"form-group row\">\n                    <label for=\"exampleFormControlInput1\">Primary Income (per month):</label>\n                    <input value={this.state.incomes.primaryIncome} name=\"primaryIncome\" type=\"number\" className=\"form-control\" onChange={this.handleChange} />\n                </div>\n                <div className=\"form-group row\">\n                    <label for=\"exampleFormControlInput1\">Investment Income/Dividends</label>\n                    <input value={this.state.investmentIncome} name=\"investmentIncome\" type=\"number\" className=\"form-control\" onChange={this.handleChange} />\n                </div>\n                <div className=\"form-group row\">\n                    <label for=\"exampleFormControlInput1\">Other Income</label>\n                    <input value={this.state.otherIncome} name=\"otherIncome\" type=\"number\" className=\"form-control\" onChange={this.handleChange} />\n                </div>\n                <hr />\n            </React.Fragment>\n        )\n    }\n    addExpense = (event) => {\n        event.preventDefault();\n        const newExpense = [...this.state.expenses]\n        newExpense.push({ name: this.state.expenseName, category: this.state.category, amount: this.state.expenseAmount })\n        this.setState({\n            expenses: newExpense\n        })\n    }\n    //finish logic fo this with state and props.\n    renderExpenses = (index) => {\n        return (\n            <React.Fragment>\n                <div className=\"form-group row\">\n                    <label for=\"exampleFormControlInput1\">Expense Name:</label>\n                    <input name=\"expenseName\" key={index} type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Name of Expense\" onChange={this.handleChange} />\n                    {/* (event) => this.handleExpenseChange(event.currentTarget.name, event.currentTarget.value, index) */}\n                </div>\n                <div class=\"form-group row\">\n                    <label for=\"exampleFormControlSelect1\">Category</label>\n                    <select name=\"category\" key={index} class=\"form-control\" id=\"exampleFormControlSelect1\" onChange={this.handleChange}>\n                        {this.categoryDropDown()}\n                    </select>\n                </div>\n                <div className=\"form-group row\">\n                    <label for=\"exampleFormControlInput1\">Expense Amount:</label>\n                    <input name=\"expenseAmount\" key={index} type=\"number\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Amount\" onChange={this.handleChange} />\n                </div>\n            </React.Fragment>\n        )\n    }\n    monthDropDown() {\n        return months.map(month => {\n            return <option>{month}</option>;\n        })\n    }\n    categoryDropDown() {\n        return categories.map(category => {\n            return <option>{category}</option>;\n        })\n    }\n\n\n    /// HandleSubmit Here\n    handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(this.state);\n\n        this.createNewCashflow();\n\n    }\n\n    //this works but data is sent in a string.\n    createNewCashflow = () => {\n\n        fetch(\"cashflow/new\", {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            credentials: \"same-origin\", \n            body: JSON.stringify({\n                month: this.state.month,\n                incomes: {\n                    primaryIncome: +this.state.incomes.primaryIncome,\n                    investmentIncome: +this.state.incomes.investmentIncome,\n                    otherIncome: +this.state.incomes.otherIncome\n                },\n                expenses: this.state.expenses\n            })\n        }).then((res) => res.json())\n            .then((data) => {\n                console.log(\"data:\", data);\n            })\n    }\n\n\n\n\n\n    render() {\n        return (\n            <div className=\"col-8\">\n                <div className=\"jumbotron\">\n                    <form onSubmit={this.handleSubmit}>\n                        <button class=\"btn btn-primary mb-2\" onClick={this.toggleIncome}>Add Income</button>\n                        <div class=\"form-group row\">\n                            <label for=\"exampleFormControlSelect1\">Months</label>\n                            <select name=\"month\" class=\"form-control\" onChange={this.handleChange} >\n                                {this.monthDropDown()}\n                            </select>\n                        </div>\n                        {this.state.showIncome && this.renderAddForm()}\n                        {this.state.expenses.map((expense, index) => {\n                            return <div key={index}>{this.renderExpenses(expense, index)}</div>\n                        })}\n                        <button class=\"btn btn-primary mb-2\" onClick={this.addExpense}>Add Expense</button>\n                        <button type=\"submit\" class=\"btn btn-success\" onClick={this.handleSubmit}>Save Expenses</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}","\nexport function calculatePayments(principalAmount, rate, years ) {\n\n    const principal = parseFloat(principalAmount);\n  const CalculateInterest = parseFloat(rate) / 100 / 12;\n  const calculatedPayments = parseFloat(years) * 12;\n\n  //Compute monthly Payment\n\n  const x = Math.pow(1 + CalculateInterest, calculatedPayments);\n  const monthly = (principal * x * CalculateInterest) / (x - 1);\n  const monthlyPayment = monthly.toFixed(2);\n\n  //Compute Interest\n\n  const totalInterest = (monthly * calculatedPayments - principal).toFixed(2);\n\n  //Compute Total Payment\n\n  const totalPayment = (monthly * calculatedPayments).toFixed(2);\n\n  return({monthlyPayment, totalInterest, totalPayment});\n  };","import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\n\nclass Chart extends React.Component {\n     \n    render() {\n        return (\n            <div className={'container'}>\n                <Doughnut\n                    data={this.props.chartData}\n                    width={100}\n                    height={200}\n                    options={{ responsive: true, maintainAspectRatio: false }}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Chart;","import React, { useState } from 'react';\nimport { calculatePayments } from './MortgageData'\nimport Chart from './MortgageChart';\n\nexport function MortgageManager() {\n\n  const [principal, setPrincipal] = useState(200000);\n  const [rate, setRate] = useState(5);\n  const [years, setYears] = useState(25);\n  const { monthlyPayment: initialMonthlyPayment, totalInterest: initialTotalInterest, totalPayment: initialTotalPayment } = calculatePayments(principal, rate, years);\n  // console.log(typeof initialTotalInterest, initialTotalInterest, initialMonthlyPayment);\n  const [monthlyPayment, setMonthlyPayment] = useState(initialMonthlyPayment);\n  const [totalInterest, setTotalInterest] = useState(initialTotalInterest);\n  const [totalPayment, setTotalPayment] = useState(initialTotalPayment);\n  // console.log(monthlyPayment, totalPayment, totalPayment)\n\n  const [chartData, setChartData] = useState({\n    labels: ['Monthly Payments', 'interest', 'Balance'],\n    datasets: [{\n      data: [\n        parseInt(monthlyPayment),\n        parseInt(totalInterest),\n        parseInt(totalPayment)\n      ],\n      backgroundColor: ['rgba(204, 102, 255,0.7)', 'rgba(71, 209, 71,1)', 'rgba(0, 153, 255,0.6)', 'rgba(255, 0, 102,0.6)']\n    }]\n  })\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // console.log('you clicked submit');\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-inline\">\n              <label>Borrow Amount</label>\n              <input name=\"principal\" type=\"borrowAmount\" value={principal} className=\"form-group mx-sm-3 mb-2\" placeholder=\"700,000\" onChange={e => {\n                setPrincipal(e.target.value);\n                const { monthlyPayment, totalInterest, totalPayment } = calculatePayments(e.target.value, rate, years);\n                // console.log(monthlyPayment, totalInterest, totalPayment);\n                setMonthlyPayment(parseInt(monthlyPayment, 10));\n                setTotalInterest(parseInt(totalInterest, 10));\n                setTotalPayment(parseInt(totalPayment, 10));\n                const newDataset = { ...chartData };\n                newDataset.datasets[0].data = [monthlyPayment, totalInterest, totalPayment];\n                // console.log('newDataset:', newDataset);\n                setChartData(newDataset);\n              }} />\n            </div>\n            <div className=\"form-inline\">\n              <label >Over</label>\n              <input name=\"years\" type=\"years\" value={years} className=\"form-group mx-sm-3 mb-2\" placeholder=\"30 Years\" onChange={e => {\n                setYears(e.target.value);\n                const { monthlyPayment, totalInterest, totalPayment } = calculatePayments(principal, rate, e.target.value);\n                setMonthlyPayment(monthlyPayment);\n                setTotalInterest(totalInterest);\n                setTotalPayment(totalPayment);\n              }} />\n            </div>\n            <div className=\"form-inline\">\n              <label >Interest Rate</label>\n              <input name=\"interest\" type=\"interest\" value={rate} className=\"form-group mx-sm-3 mb-2\" placeholder=\"3.5%\" onChange={e => {\n                setRate(e.target.value);\n                const { monthlyPayment, totalInterest, totalPayment } = calculatePayments(principal, e.target.value, years);\n                setMonthlyPayment(monthlyPayment);\n                setTotalInterest(totalInterest);\n                setTotalPayment(totalPayment);\n              }} />\n              <button>Save Calculation</button>\n            </div>\n          </form>\n        </div>\n        <div className=\"col\">\n          <Chart chartData={chartData} />\n        </div>\n      </div>\n    </div> \n  )\n};","import React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport {Navbar} from './components/Navbar';\nimport {SideNavBar} from './components/sideBarNav';\nimport { Footer } from './components/Footer';\nimport { Home } from './components/Home';\nimport {Auth} from './components/Auth';\nimport {Signup} from './components/Signup';\nimport {CashflowManager} from './components/cashflowComponents/CashflowManager';\nimport {CashflowForm} from './components/cashflowComponents/CashflowForm';\nimport { MortgageManager } from './components/mortgageComponents/MortgageManager';\n\n// import {SideNavBar} from './components/sideBarNav';\n\nexport function App() {\n  \n  return (\n    <div className=\"App\">\n      <Navbar />\n      {/* <SideNavBar/> */}\n      <Switch>\n      <Route exact path={\"/\"} component={Home} />\n      <Route exact path={\"/mortgage\"} component={MortgageManager} />\n      <Route exact path={\"/auth\"} component={Auth} />\n      <Route exact path={\"/signup\"} component={Signup} />\n      <Route exact path={\"/cashflow\"} component={CashflowManager} />\n      <Route exact path={\"/cashflowform\"} component={CashflowForm} />\n      \n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\n\n\nReactDOM.render(\n    <Router>\n    <App />\n    </Router>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}